name: CI

on: [push, pull_request]

jobs:
  operational_test:
    runs-on: ubuntu-18.04
    steps:
    - name: Build SSH server Dockerfile
      run: |
        docker build -t ssh-server - <<'EOS'
        FROM ubuntu:18.04
        RUN apt update
        RUN apt install -y openssh-server
        RUN mkdir /var/run/sshd
        
        # (base(ja): https://qiita.com/FGtatsuro/items/4893dfb138f70d972904)
        RUN useradd -m guest
        RUN passwd -d guest
        RUN sed -ri 's/^#?PermitEmptyPasswords\s+.*/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
        RUN sed -ri 's/^#?UsePAM\s+.*/UsePAM no/' /etc/ssh/sshd_config
        
        # SSH login fix. Otherwise user is kicked off after login
        RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
        
        ENV NOTVISIBLE "in users profile"
        RUN echo "export VISIBLE=now" >> /etc/profile
        ENTRYPOINT [ "/usr/sbin/sshd", "-D" ]
        EOS
    - name: Run SSH Server
      run: docker run -d -p 2022:22 --init ssh-server
    - name: Wait for running SSH server
      run: sleep 3
    - name: Run Piping Server
      run: docker run -d -p 8080:8080 nwtgck/piping-server:v1.1.3
    - name: Wait for running Piping server
      run: sleep 3
    - uses: actions/checkout@v2
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - run: go build -o piping-tunnel main/main.go
    - run: ./piping-tunnel -s http://localhost:8080 server -p 2022 aaa bbb &
    - run: ./piping-tunnel -s http://localhost:8080 client -p 3322 aaa bbb &
    # (base: -o option: https://www.cyberithub.com/ssh-host-key-verification-failed-error-in-linux/)
    - run: ssh -p 3322 -o 'StrictHostKeyChecking no' guest@localhost hostname

    # Encrypt with AES-CTR
    - run: ./piping-tunnel -s http://localhost:8080 server -p 2022 --symmetric --cipher-type=aes-ctr --passphrase=mypass aaa bbb &
    - run: ./piping-tunnel -s http://localhost:8080 client -p 3322 --symmetric --cipher-type=aes-ctr --passphrase=mypass aaa bbb &
    # (base: -o option: https://www.cyberithub.com/ssh-host-key-verification-failed-error-in-linux/)
    - run: ssh -p 3322 -o 'StrictHostKeyChecking no' guest@localhost hostname

    - name: Run server-host with yamux
      run: ./piping-tunnel -s http://localhost:8080 server -p 2022 --yamux aaa-yamux bbb-yamux & echo $! > pid1
    - name: Run client-host with yamux
      run: ./piping-tunnel -s http://localhost:8080 client -p 4422 --yamux aaa-yamux bbb-yamux & echo $! > pid2
    # Check whether ssh multiple times
    # (base: -o option: https://www.cyberithub.com/ssh-host-key-verification-failed-error-in-linux/)
    - run: ssh -p 4422 -o 'StrictHostKeyChecking no' guest@localhost hostname
    - run: ssh -p 4422 -o 'StrictHostKeyChecking no' guest@localhost ls -l /
    - run: kill $(cat pid1) && kill $(cat pid2)

    - name: Run socks with yamux
      run: ./piping-tunnel -s http://localhost:8080 socks --yamux aaa-socks bbb-socks & echo $! > pid1
    - name: Run client-host with yamux
      run: ./piping-tunnel -s http://localhost:8080 client -p 1081 --yamux aaa-socks bbb-socks & echo $! > pid2
    # NOTE: Depends on external resource: example.com
    - run: curl -x socks5h://localhost:1081 https://example.com
    - run: kill $(cat pid1) && kill $(cat pid2)
